# 密钥
作为一个安全设备，TPM最强大的功能就是，应用程序在使用密钥的同时保证密钥安全地保存在硬件设备中。TPM可以生成密钥，也可以导入在外部生成的密钥。它支持对称和非对称密钥。第二章已经描述了这两种密钥的基本原理。

因为TPM设备的存储资源有限，必要时应用程序可以安全地将密钥换入换出TPM，这时TPM可以被认为是一个密钥缓存。相关操作会在“密钥缓存”这一节描述。

一共有三种密钥组织架构，它们分别手控于不同的安全角色。每一种组织架构都可以将密钥组织成树形父子关系。第九章已经描述了组织架构和它们的应用。

每一个密钥都有独立的安全控制方式，包括口令，增强的授权策略，密钥复制到其他父节点或者其他TPM的限制，签名或者加解密密钥的用途限制。密钥可以被认证也可以用于认证其他密钥。密钥属性相关的内容将会在“密钥类型和属性”这一节中讨论。适用于所有TPM实体的授权操作细节，包括口令和policy，将会被推迟到第13，14章介绍。

## 密钥命令
下面介绍经常用于密钥操作的TPM命令。需要说明的是，下面的列表并不是完整的命令。参考TPM2.0规范第3部分来了解完整的命令集和API细节。这些命令将按照后续章节中描述和应用案例中出现的顺序来介绍：

* TPM2_Create和TPM2_CreatePrimary可以通过模板创建所有类型的密钥。
* TPM2_Load(用于加密的私钥)和TPM2_LoadExternal(用于公钥或者明文私钥)可以将密钥加载到TPM中。

## 密钥生成器
## 主密钥和种子
## 密钥的持续性
## 密钥缓存
## 密钥授权
## 密钥销毁
## 密钥组织架构
## 密钥类型及其属性
### 对称和非对称密钥属性
### 密钥复制属性
### 受限制的签名密钥
### 受限制的解密密钥
## 上下文管理和加载
## 空组织架构
## 认证
## 密钥结构详解
## 总结
